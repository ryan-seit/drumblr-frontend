{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/Documents/GitHub/drumblr_frontend/src/App.js\";\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport MIDISounds from 'midi-sounds-react';\nimport HeaderContainer from './HeaderContainer';\nimport NavBar from './NavBar';\nimport SampleContainer from './SampleContainer';\nimport FooterContainer from './FooterContainer';\nimport './css/App.css';\nimport './css/HeaderContainer.css';\nimport './css/NavBar.css';\nimport './css/SampleContainer.css';\nimport './css/FooterContainer.css';\nimport './css/DisplayContainer.css';\nconst URL = 'http://localhost:3000';\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      bpm: 120,\n      name: 'test',\n      sample1: 3,\n      sample2: 22,\n      sample3: 26,\n      sample4: 35,\n      tracks: [[false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]]\n    };\n    this.beats = [];\n\n    this.renderMIDISounds = () => {\n      return /*#__PURE__*/React.createElement(MIDISounds, {\n        className: \"MIDISounds\",\n        ref: ref => this.midiSounds = ref,\n        appElementName: \"root\",\n        drums: [this.state.sample1, this.state.sample2, this.state.sample3, this.state.sample4],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }\n      });\n    };\n\n    this.fillBeat = () => {\n      for (let i = 0; i < 16; i++) {\n        let index = i;\n        let drums = [];\n\n        if (this.state.tracks[0][i]) {\n          drums.push(this.state.sample1);\n        }\n\n        if (this.state.tracks[1][i]) {\n          drums.push(this.state.sample2);\n        }\n\n        if (this.state.tracks[2][i]) {\n          drums.push(this.state.sample3);\n        }\n\n        if (this.state.tracks[3][i]) {\n          drums.push(this.state.sample4);\n        }\n\n        let drumBeat = [drums, []];\n        this.beats[index] = drumBeat;\n      }\n    };\n\n    this.playLoop = () => {\n      this.fillBeat();\n      this.midiSounds.startPlayLoop(this.beats, this.state.bpm, 1 / 16);\n    };\n\n    this.stopLoop = () => {\n      this.midiSounds.stopPlayLoop();\n    };\n\n    this.toggleDrum = (track, step) => {\n      let a = [...this.state.tracks];\n      a[track][step] = !a[track][step];\n      this.setState({\n        tracks: a\n      });\n      this.fillBeat();\n    };\n\n    this.handleAdjustBPM = e => {\n      this.setState({\n        bpm: e\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      initialized: true\n    });\n  } // render MIDISounds logo in order for samples to play when sequence is triggered\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"drumblr\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(HeaderContainer, {\n        bpm: this.state.bpm,\n        adjustBPM: this.handleAdjustBPM,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(NavBar, {\n        playLoop: this.playLoop,\n        stopLoop: this.stopLoop,\n        handleSave: this.handleSave,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(SampleContainer, {\n        app: this.state,\n        toggleDrum: this.toggleDrum,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(FooterContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      })), this.renderMIDISounds())),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/beats/:id\",\n      render: routeProps => /*#__PURE__*/React.createElement(SampleContainer, Object.assign({}, routeProps, {\n        app: this.state,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 56\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/ryan/Documents/GitHub/drumblr_frontend/src/App.js"],"names":["React","Route","Switch","MIDISounds","HeaderContainer","NavBar","SampleContainer","FooterContainer","URL","App","Component","state","bpm","name","sample1","sample2","sample3","sample4","tracks","beats","renderMIDISounds","ref","midiSounds","fillBeat","i","index","drums","push","drumBeat","playLoop","startPlayLoop","stopLoop","stopPlayLoop","toggleDrum","track","step","a","setState","handleAdjustBPM","e","componentDidMount","initialized","render","handleSave","routeProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Route, Switch } from 'react-router-dom'\nimport MIDISounds from 'midi-sounds-react';\nimport HeaderContainer from './HeaderContainer';\nimport NavBar from './NavBar';\nimport SampleContainer from './SampleContainer';\nimport FooterContainer from './FooterContainer';\nimport './css/App.css';\nimport './css/HeaderContainer.css';\nimport './css/NavBar.css';\nimport './css/SampleContainer.css';\nimport './css/FooterContainer.css';\nimport './css/DisplayContainer.css';\n\nconst URL = 'http://localhost:3000';\n\nexport default class App extends React.Component {\n\n  state = {\n    bpm: 120,\n    name: 'test',\n    sample1: 3,\n    sample2: 22,\n    sample3: 26,\n    sample4: 35,\n    tracks:[\n      [false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false],\n      [false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false],\n      [false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false],\n      [false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false]\n    ],\n  }\n  beats=[]\n\n\tcomponentDidMount() {\n\t\tthis.setState({ initialized: true });\n  }\n\n  // render MIDISounds logo in order for samples to play when sequence is triggered\n  renderMIDISounds = () => {\n    return (\n      <MIDISounds \n      className=\"MIDISounds\"\n      ref={(ref) => (this.midiSounds = ref)}\n      appElementName=\"root\" \n      drums={[this.state.sample1, this.state.sample2, this.state.sample3, this.state.sample4]}\n      />\n    )\n  }\n  \n\n  fillBeat = () => {\n    for(let i=0; i < 16; i++){\n      let index = i\n      let drums = [];          \n        if (this.state.tracks[0][i]){drums.push(this.state.sample1)} \n        if (this.state.tracks[1][i]){drums.push(this.state.sample2)}\n        if (this.state.tracks[2][i]){drums.push(this.state.sample3)}\n        if (this.state.tracks[3][i]){drums.push(this.state.sample4)} \n        let drumBeat = [drums, []];\n        this.beats[index] = drumBeat\n    }\n  }\n                  \n\tplayLoop = () => {\n    this.fillBeat();\n    this.midiSounds.startPlayLoop(this.beats, this.state.bpm, 1/16);\n  }\n  \n\tstopLoop = () => {\n\t\tthis.midiSounds.stopPlayLoop();\n  }\n\n\ttoggleDrum = (track ,step) => {\n    let a = [...this.state.tracks];\n    a[track][step] = !a[track][step];\n\t\tthis.setState({\n      tracks: a\n    });\n    this.fillBeat();\n  }\n  \n  handleAdjustBPM = (e) => {\n    this.setState({\n      bpm: e\n    })\n  }\n\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/\" render={() => \n        <>\n          <div className=\"App\">\n          <div className=\"drumblr\">\n            <HeaderContainer bpm={this.state.bpm} adjustBPM={this.handleAdjustBPM} />\n            <NavBar playLoop={this.playLoop} stopLoop={this.stopLoop} handleSave={this.handleSave} />\n            <SampleContainer app={this.state} toggleDrum={this.toggleDrum} />\n            <FooterContainer />\n          </div>\n          {this.renderMIDISounds()}\n        </div>\n        </>\n        } />\n        <Route path=\"/beats/:id\" render={routeProps => <SampleContainer {...routeProps} app={this.state}/>} />\n        \n      </Switch>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}