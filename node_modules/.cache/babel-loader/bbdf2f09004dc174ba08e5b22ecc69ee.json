{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/Documents/GitHub/drumblr_frontend/src/SampleContainer.js\";\nimport React from 'react';\nimport MIDISounds from 'midi-sounds-react';\nimport Button from '../src/Button';\n\nclass SampleContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // I just hardcoded in some basic drums to start\n      drums: [3, 17, 22, 26, 32, 35, 40, 45, 52, 58, 61, 70, 95, 105],\n      drumObjs: [{\n        id: 3,\n        name: 'Bass Drum',\n        isPlaying: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]\n      }, {\n        id: 17,\n        name: 'Snare Drum',\n        isPlaying: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]\n      }, {\n        id: 22,\n        name: 'Hand Clap',\n        isPlaying: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]\n      }, {\n        id: 26,\n        name: 'Snare 2',\n        isPlaying: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]\n      }, {\n        id: 32,\n        name: 'Low Tom 2',\n        isPlaying: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]\n      }, {\n        id: 35,\n        name: 'Closed Hi-hat',\n        isPlaying: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]\n      }, {\n        id: 40,\n        name: 'Low Tom 1',\n        isPlaying: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]\n      }, {\n        id: 45,\n        name: 'Pedal Hi-hat',\n        isPlaying: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]\n      }]\n    };\n\n    this.showDrums = () => {\n      // this is basically just a console.log of the drums currently available\n      this.midiSounds.player.loader.drumsKeys();\n    };\n\n    this.togglePlaying = (drumIndex, beatIndex) => {\n      this.state.drumObjs[drumIndex].isPlaying[beatIndex] = !this.state.drumObjs[drumIndex].isPlaying[beatIndex];\n      console.log(this.state.drumObjs[drumIndex].isPlaying);\n    };\n\n    this.playDrum = drum_id => {\n      this.midiSounds.playDrumsNow([drum_id]);\n    };\n\n    this.getDrumObjButtons = () => {\n      return this.state.drumObjs.map((drumObj, index) => {\n        let drumIndex = index;\n        let drum = drumObj;\n        return drumObj.isPlaying.map((beat, index) => {\n          return /*#__PURE__*/React.createElement(Button, {\n            key: drum.name + index,\n            id: drum.id,\n            drumIndex: drumIndex,\n            beatIndex: index,\n            togglePlaying: this.togglePlaying,\n            drumObj: drum,\n            playDrum: this.playDrum,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 24\n            }\n          });\n        });\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MIDISounds, {\n      ref: ref => this.midiSounds = ref,\n      appElementName: \"root\" // commented out instruments, but could be useful to add synth parts/basslines, etc.\n      // left it commented in case we decide to add that later.\n      // instruments={[]} \n      ,\n      drums: this.state.drums,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }), this.getDrumObjButtons());\n  }\n\n}\n\nexport default SampleContainer;","map":{"version":3,"sources":["/Users/ryan/Documents/GitHub/drumblr_frontend/src/SampleContainer.js"],"names":["React","MIDISounds","Button","SampleContainer","Component","state","drums","drumObjs","id","name","isPlaying","showDrums","midiSounds","player","loader","drumsKeys","togglePlaying","drumIndex","beatIndex","console","log","playDrum","drum_id","playDrumsNow","getDrumObjButtons","map","drumObj","index","drum","beat","render","ref"],"mappings":"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","sourcesContent":["import React from 'react';\nimport MIDISounds from 'midi-sounds-react';\nimport Button from '../src/Button'\n\nclass SampleContainer extends React.Component{\n    state = {\n        // I just hardcoded in some basic drums to start\n        drums: [ 3, 17, 22, 26, 32, 35, 40, 45, 52, 58, 61, 70, 95, 105],\n        drumObjs: [{\n            id: 3, \n            name: 'Bass Drum', \n            isPlaying: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n        }, {\n            id: 17, \n            name: 'Snare Drum', \n            isPlaying: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n        }, {\n            id: 22, \n            name: 'Hand Clap', \n            isPlaying: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n        }, {\n            id: 26, \n            name: 'Snare 2', \n            isPlaying: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n        },{\n            id: 32, \n            name: 'Low Tom 2', \n            isPlaying: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n        },{\n            id: 35, \n            name: 'Closed Hi-hat', \n            isPlaying: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n        },{\n            id: 40, \n            name: 'Low Tom 1', \n            isPlaying: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n        },{\n            id: 45, \n            name: 'Pedal Hi-hat', \n            isPlaying: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n        }\n    ]\n    }\n\n    showDrums = () => {\n        // this is basically just a console.log of the drums currently available\n        this.midiSounds.player.loader.drumsKeys()\n    }\n\n    togglePlaying = (drumIndex, beatIndex) => {\n        this.state.drumObjs[drumIndex].isPlaying[beatIndex] = !this.state.drumObjs[drumIndex].isPlaying[beatIndex]\n\n        console.log(this.state.drumObjs[drumIndex].isPlaying)\n    }\n\n    playDrum = (drum_id) => {\n        this.midiSounds.playDrumsNow([drum_id])\n    }\n\n    getDrumObjButtons = () => {\n        return this.state.drumObjs.map((drumObj, index) => {\n            let drumIndex = index\n            let drum = drumObj\n            return drumObj.isPlaying.map((beat, index) => {\n                return <Button key={drum.name + index} id={drum.id} drumIndex={drumIndex} beatIndex={index} togglePlaying={this.togglePlaying} drumObj={drum} playDrum={this.playDrum}/>\n            })\n        })\n    }\n\n    render(){\n        return (\n            <>\n                <MIDISounds \n                ref={(ref) => (this.midiSounds = ref)}\n                appElementName=\"root\" \n                // commented out instruments, but could be useful to add synth parts/basslines, etc.\n                // left it commented in case we decide to add that later.\n\t            // instruments={[]} \n                drums={this.state.drums}\n                />\n                {/* {this.showDrums} */}\n                {this.getDrumObjButtons()}\n            </>\n\n        )\n\n    }\n}\n\nexport default SampleContainer"]},"metadata":{},"sourceType":"module"}