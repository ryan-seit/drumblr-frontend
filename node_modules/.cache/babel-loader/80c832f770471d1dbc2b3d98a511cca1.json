{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/Documents/GitHub/drumblr_frontend/src/SampleContainer.js\";\nimport React from 'react';\nimport MIDISounds from 'midi-sounds-react';\nimport Button from '../src/Button';\n\nclass SampleContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // I just hardcoded in some basic drums to start\n      drums: [3, 17, 22, 26, 32, 35, 40, 45, 52, 58, 61, 70, 95, 105],\n      drumObjs: [{\n        id: 3,\n        name: 'Bass Drum',\n        isPlaying: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]\n      }, {\n        id: 22,\n        name: 'Hand Clap',\n        isPlaying: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]\n      }, {\n        id: 26,\n        name: 'Snare',\n        isPlaying: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]\n      } // {\n      //   id: 17, \n      //     name: 'Snare Drum', \n      //     isPlaying: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n      // }, {\n      //     id: 32, \n      //     name: 'Low Tom 2', \n      //     isPlaying: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n      // },{\n      //     id: 35, \n      //     name: 'Closed Hi-hat', \n      //     isPlaying: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n      // },{\n      //     id: 40, \n      //     name: 'Low Tom 1', \n      //     isPlaying: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n      // },{\n      //     id: 45, \n      //     name: 'Pedal Hi-hat', \n      //     isPlaying: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n      // }\n      ],\n      instrumentObj: [{\n        id: 458,\n        name: \"Violin\",\n        isPlaying: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]\n      }]\n    };\n\n    this.showDrums = () => {\n      // this is basically just a console.log of the drums currently available\n      this.midiSounds.player.loader.drumsKeys();\n    };\n\n    this.togglePlaying = (drumIndex, beatIndex) => {\n      this.state.drumObjs[drumIndex].isPlaying[beatIndex] = !this.state.drumObjs[drumIndex].isPlaying[beatIndex];\n      console.log(this.state.drumObjs[drumIndex].isPlaying);\n    };\n\n    this.playDrum = drum_id => {\n      this.midiSounds.playDrumsNow([drum_id]);\n    };\n\n    this.playInstrument = instrument_id => {\n      this.midiSounds.playChordNow(instrument_id, [60], 0.5);\n    };\n\n    this.getDrumObjButtons = () => {\n      return this.state.drumObjs.map((drumObj, index) => {\n        let drumIndex = index;\n        let drum = drumObj;\n        return drumObj.isPlaying.map((beat, index) => {\n          return /*#__PURE__*/React.createElement(Button, {\n            key: drum.name + index,\n            id: drum.id,\n            sampleIndex: drumIndex,\n            beatIndex: index,\n            togglePlaying: this.togglePlaying,\n            sampleObj: drum,\n            playDrum: this.playDrum,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 24\n            }\n          });\n        });\n      });\n    };\n\n    this.getInstrumentObjButtons = () => {\n      return this.state.instrumentObj.map((instrumentObj, index) => {\n        let instrumentIndex = index;\n        let instrument = instrumentObj;\n        return instrumentObj.isPlaying.map((beat, index) => {\n          return /*#__PURE__*/React.createElement(Button, {\n            key: instrument.name + index,\n            id: instrument.id,\n            sampleIndex: instrumentIndex,\n            beatIndex: index,\n            togglePlaying: this.togglePlaying,\n            sampleObj: instrument,\n            playDrum: this.playInstrument,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 24\n            }\n          });\n        });\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"SampleContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MIDISounds, {\n      ref: ref => this.midiSounds = ref,\n      appElementName: \"root\",\n      instruments: [458],\n      drums: this.state.drums,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }), this.getDrumObjButtons(), this.getInstrumentObjButtons());\n  }\n\n}\n\nexport default SampleContainer;","map":{"version":3,"sources":["/Users/ryan/Documents/GitHub/drumblr_frontend/src/SampleContainer.js"],"names":["React","MIDISounds","Button","SampleContainer","Component","state","drums","drumObjs","id","name","isPlaying","instrumentObj","showDrums","midiSounds","player","loader","drumsKeys","togglePlaying","drumIndex","beatIndex","console","log","playDrum","drum_id","playDrumsNow","playInstrument","instrument_id","playChordNow","getDrumObjButtons","map","drumObj","index","drum","beat","getInstrumentObjButtons","instrumentIndex","instrument","render","ref"],"mappings":"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","sourcesContent":["import React from 'react';\nimport MIDISounds from 'midi-sounds-react';\nimport Button from '../src/Button'\n\nclass SampleContainer extends React.Component{\n    state = {\n        // I just hardcoded in some basic drums to start\n        drums: [ 3, 17, 22, 26, 32, 35, 40, 45, 52, 58, 61, 70, 95, 105],\n        drumObjs: [{\n            id: 3, \n            name: 'Bass Drum', \n            isPlaying: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n        }, {\n            id: 22, \n            name: 'Hand Clap', \n            isPlaying: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n        }, {\n            id: 26, \n            name: 'Snare', \n            isPlaying: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n        }\n        // {\n        //   id: 17, \n        //     name: 'Snare Drum', \n        //     isPlaying: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n        // }, {\n        //     id: 32, \n        //     name: 'Low Tom 2', \n        //     isPlaying: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n        // },{\n        //     id: 35, \n        //     name: 'Closed Hi-hat', \n        //     isPlaying: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n        // },{\n        //     id: 40, \n        //     name: 'Low Tom 1', \n        //     isPlaying: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n        // },{\n        //     id: 45, \n        //     name: 'Pedal Hi-hat', \n        //     isPlaying: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n        // }\n    ], instrumentObj: [{\n            id: 458,\n            name: \"Violin\",\n            isPlaying: [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false],\n        }]\n    }\n\n    showDrums = () => {\n        // this is basically just a console.log of the drums currently available\n        this.midiSounds.player.loader.drumsKeys()\n    }\n\n    togglePlaying = (drumIndex, beatIndex) => {\n        this.state.drumObjs[drumIndex].isPlaying[beatIndex] = !this.state.drumObjs[drumIndex].isPlaying[beatIndex]\n\n        console.log(this.state.drumObjs[drumIndex].isPlaying)\n    }\n\n    playDrum = (drum_id) => {\n        this.midiSounds.playDrumsNow([drum_id])\n    }\n\n    playInstrument = (instrument_id) => {\n        this.midiSounds.playChordNow(instrument_id, [60], 0.5);\n    }\n\n    getDrumObjButtons = () => {\n        return this.state.drumObjs.map((drumObj, index) => {\n            let drumIndex = index\n            let drum = drumObj\n            return drumObj.isPlaying.map((beat, index) => {\n                return <Button key={drum.name + index} id={drum.id} sampleIndex={drumIndex} beatIndex={index} togglePlaying={this.togglePlaying} sampleObj={drum} playDrum={this.playDrum}/>\n            })\n        })\n    }\n\n    getInstrumentObjButtons = () => {\n        return this.state.instrumentObj.map((instrumentObj, index) => {\n            let instrumentIndex = index\n            let instrument = instrumentObj\n            return instrumentObj.isPlaying.map((beat, index) => {\n                return <Button key={instrument.name + index} id={instrument.id} sampleIndex={instrumentIndex} beatIndex={index} togglePlaying={this.togglePlaying} sampleObj={instrument} playDrum={this.playInstrument}/>\n            })\n        })\n    }\n\n    render(){\n        return (\n            <div className=\"SampleContainer\">\n                <MIDISounds \n                ref={(ref) => (this.midiSounds = ref)}\n                appElementName=\"root\" \n\t            instruments={[458]} \n                drums={this.state.drums}\n                />\n                {/* {this.showDrums} */}\n                {this.getDrumObjButtons()}\n                {this.getInstrumentObjButtons()}\n            </div>\n\n        )\n\n    }\n}\n\nexport default SampleContainer"]},"metadata":{},"sourceType":"module"}