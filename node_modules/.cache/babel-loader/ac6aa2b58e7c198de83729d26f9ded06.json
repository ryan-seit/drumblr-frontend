{"ast":null,"code":"var _jsxFileName = \"/Users/ryan/Documents/GitHub/drumblr_frontend/src/App.js\";\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport MIDISounds from 'midi-sounds-react';\nimport HeaderContainer from './HeaderContainer';\nimport NavBar from './NavBar';\nimport SampleContainer from './SampleContainer';\nimport FooterContainer from './FooterContainer';\nimport BeatsList from './BeatsList';\nimport './css/App.css';\nimport './css/HeaderContainer.css';\nimport './css/NavBar.css';\nimport './css/SampleContainer.css';\nimport './css/FooterContainer.css';\nimport './css/DisplayContainer.css';\nimport { Link } from 'react-router-dom';\nconst URL = 'http://localhost:3000';\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      bpm: 120,\n      name: 'unsaved',\n      sample1: 3,\n      sample2: 22,\n      sample3: 17,\n      sample4: 36,\n      tracks: [[false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]]\n    };\n    this.beats = [];\n\n    this.renderMIDISounds = () => {\n      return /*#__PURE__*/React.createElement(MIDISounds, {\n        className: \"MIDISounds\",\n        ref: ref => this.midiSounds = ref,\n        appElementName: \"root\",\n        drums: [this.state.sample1, this.state.sample2, this.state.sample3, this.state.sample4],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }\n      });\n    };\n\n    this.fillBeat = () => {\n      for (let i = 0; i < 16; i++) {\n        let index = i;\n        let drums = [];\n\n        if (this.state.tracks[0][i]) {\n          drums.push(this.state.sample1);\n        }\n\n        if (this.state.tracks[1][i]) {\n          drums.push(this.state.sample2);\n        }\n\n        if (this.state.tracks[2][i]) {\n          drums.push(this.state.sample3);\n        }\n\n        if (this.state.tracks[3][i]) {\n          drums.push(this.state.sample4);\n        }\n\n        let drumBeat = [drums, []];\n        this.beats[index] = drumBeat;\n      }\n    };\n\n    this.playLoop = () => {\n      this.fillBeat();\n      this.midiSounds.startPlayLoop(this.beats, this.state.bpm, 1 / 16);\n    };\n\n    this.stopLoop = () => {\n      this.midiSounds.stopPlayLoop();\n    };\n\n    this.toggleDrum = (track, step) => {\n      let a = [...this.state.tracks];\n      a[track][step] = !a[track][step];\n      this.setState({\n        tracks: a\n      });\n      this.fillBeat();\n    };\n\n    this.handleAdjustBPM = e => {\n      this.setState({\n        bpm: e\n      });\n    };\n\n    this.handleSave = () => {\n      const object = {\n        bpm: this.state.bpm,\n        name: this.state.name,\n        sample1: this.state.sample1,\n        sample2: this.state.sample2,\n        sample3: this.state.sample3,\n        sample4: this.state.sample4,\n        tracks: this.state.tracks\n      };\n      fetch(URL + '/beats', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(object)\n      }).then(response => response.json()).then(beat => {\n        console.log(\"beat\", beat);\n      });\n    };\n\n    this.handleOnChange = e => {\n      console.log(e.target.value);\n      this.setState({\n        name: e.target.value\n      });\n    };\n\n    this.handleFetch = id => {\n      fetch(URL + `/beats/${id}`).then(response => response.json()).then(beat => {\n        this.setState({\n          bpm: beat.bpm,\n          name: beat.name,\n          sample1: beat.sample1,\n          sample2: beat.sample2,\n          sample3: beat.sample3,\n          sample4: beat.sample4,\n          tracks: beat.tracks\n        });\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      initialized: true\n    });\n  } // render MIDISounds logo in order for samples to play when sequence is triggered\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n          to: \"/\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }\n        }, \"Home\"), /*#__PURE__*/React.createElement(Link, {\n          to: \"/beats\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }\n        }, \"Browse\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"App\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(HeaderContainer, {\n          bpm: this.state.bpm,\n          adjustBPM: this.handleAdjustBPM,\n          midiSounds: this.renderMIDISounds(),\n          handleSave: this.handleSave,\n          handleOnChange: this.handleOnChange,\n          value: this.state.name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(NavBar, {\n          playLoop: this.playLoop,\n          stopLoop: this.stopLoop,\n          handleSave: this.handleSave,\n          handleOnChange: this.handleOnChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(SampleContainer, {\n          app: this.state,\n          toggleDrum: this.toggleDrum,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(FooterContainer, {\n          handleFetch: this.handleFetch,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }\n        })));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/beats\",\n      render: () => /*#__PURE__*/React.createElement(BeatsList, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 50\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/beats/:id\",\n      render: routeProps => /*#__PURE__*/React.createElement(SampleContainer, Object.assign({}, routeProps, {\n        app: this.state,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 56\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/ryan/Documents/GitHub/drumblr_frontend/src/App.js"],"names":["React","Route","Switch","MIDISounds","HeaderContainer","NavBar","SampleContainer","FooterContainer","BeatsList","Link","URL","App","Component","state","bpm","name","sample1","sample2","sample3","sample4","tracks","beats","renderMIDISounds","ref","midiSounds","fillBeat","i","index","drums","push","drumBeat","playLoop","startPlayLoop","stopLoop","stopPlayLoop","toggleDrum","track","step","a","setState","handleAdjustBPM","e","handleSave","object","fetch","method","headers","body","JSON","stringify","then","response","json","beat","console","log","handleOnChange","target","value","handleFetch","id","catch","error","componentDidMount","initialized","render","routeProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Route, Switch } from 'react-router-dom'\nimport MIDISounds from 'midi-sounds-react';\nimport HeaderContainer from './HeaderContainer';\nimport NavBar from './NavBar';\nimport SampleContainer from './SampleContainer';\nimport FooterContainer from './FooterContainer';\nimport BeatsList from './BeatsList'\nimport './css/App.css';\nimport './css/HeaderContainer.css';\nimport './css/NavBar.css';\nimport './css/SampleContainer.css';\nimport './css/FooterContainer.css';\nimport './css/DisplayContainer.css';\nimport { Link } from 'react-router-dom'\n\n\n\nconst URL = 'http://localhost:3000';\n\nexport default class App extends React.Component {\n\n  state = {\n    bpm: 120,\n    name: 'unsaved',\n    sample1: 3,\n    sample2: 22,\n    sample3: 17,\n    sample4: 36,\n    tracks:[\n      [false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false],\n      [false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false],\n      [false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false],\n      [false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false]\n    ],\n  }\n  beats=[]\n\n\tcomponentDidMount() {\n\t\tthis.setState({ initialized: true });\n  }\n\n  // render MIDISounds logo in order for samples to play when sequence is triggered\n  renderMIDISounds = () => {\n    return (\n      <MIDISounds \n      className=\"MIDISounds\"\n      ref={(ref) => (this.midiSounds = ref)}\n      appElementName=\"root\" \n      drums={[this.state.sample1, this.state.sample2, this.state.sample3, this.state.sample4]}\n      />\n    )\n  }\n  \n\n  fillBeat = () => {\n    for(let i=0; i < 16; i++){\n      let index = i\n      let drums = [];          \n        if (this.state.tracks[0][i]){drums.push(this.state.sample1)} \n        if (this.state.tracks[1][i]){drums.push(this.state.sample2)}\n        if (this.state.tracks[2][i]){drums.push(this.state.sample3)}\n        if (this.state.tracks[3][i]){drums.push(this.state.sample4)} \n        let drumBeat = [drums, []];\n        this.beats[index] = drumBeat\n    }\n  }\n                  \n\tplayLoop = () => {\n    this.fillBeat();\n    this.midiSounds.startPlayLoop(this.beats, this.state.bpm, 1/16);\n  }\n  \n\tstopLoop = () => {\n\t\tthis.midiSounds.stopPlayLoop();\n  }\n\n\ttoggleDrum = (track ,step) => {\n    let a = [...this.state.tracks];\n    a[track][step] = !a[track][step];\n\t\tthis.setState({\n      tracks: a\n    });\n    this.fillBeat();\n  }\n\n  // clearAll = () => {\n  //   this.setState({\n  //     tracks:[\n  //     [false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false],\n  //     [false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false],\n  //     [false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false],\n  //     [false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false]\n  //     ]\n  //   }, () => console.log(this.state.tracks));\n  // }\n  \n  handleAdjustBPM = (e) => {\n    this.setState({\n      bpm: e\n    })\n  }\n\n  handleSave = () => {\n    const object = {\n      bpm: this.state.bpm,\n      name: this.state.name,\n      sample1: this.state.sample1,\n      sample2: this.state.sample2,\n      sample3: this.state.sample3,\n      sample4: this.state.sample4,\n      tracks: this.state.tracks\n    }    \n    fetch(URL + '/beats', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(object),\n    })\n    .then(response => response.json())\n    .then(beat => {\n      console.log(\"beat\", beat)\n    })\n  }\n\n  handleOnChange = (e) => {\n    console.log(e.target.value)\n    this.setState({\n      name: e.target.value\n    })\n  }\n\n  handleFetch = (id) => {\n  fetch(URL + `/beats/${id}`)\n  .then(response => response.json())\n  .then(beat => {\n      this.setState({\n        bpm: beat.bpm,\n        name: beat.name,\n        sample1: beat.sample1,\n        sample2: beat.sample2,\n        sample3: beat.sample3,\n        sample4: beat.sample4,\n        tracks: beat.tracks,\n      })\n  }\n  )\n  .catch((error) => {\n    console.error('Error:', error);\n  });\n}\n\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/\" render={() => {\n          return (\n            <>\n              <Link to=\"/\">Home</Link>\n              <Link to=\"/beats\">Browse</Link>\n\n              <div className=\"App\">\n\n                <HeaderContainer bpm={this.state.bpm} \n                  adjustBPM={this.handleAdjustBPM} \n                  midiSounds={this.renderMIDISounds()}\n                  handleSave={this.handleSave}\n                  handleOnChange={this.handleOnChange} \n                  value={this.state.name}\n                />\n\n                <NavBar playLoop={this.playLoop} \n                  stopLoop={this.stopLoop} \n                  handleSave={this.handleSave}\n                  handleOnChange={this.handleOnChange}\n                />\n\n                <SampleContainer app={this.state} \n                  toggleDrum={this.toggleDrum} \n                />\n\n                <FooterContainer handleFetch={this.handleFetch} />\n\n              </div>\n            </>\n          )\n        }} />\n        <Route exact path=\"/beats\" render={() => <BeatsList/>}/>\n        <Route path=\"/beats/:id\" render={routeProps => <SampleContainer {...routeProps} app={this.state}/>} />\n      </Switch>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}